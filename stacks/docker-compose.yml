#  this compose file will be used to deploy stack of cicd pipeline
#  this version of compose can be used with docker 17.06.0+
version: '3.3'

services:

# service 1 -- scm (GitLab) called here devops-scm

# this service will use the following volumes
# Local location       Container location      Usage

# /srv/gitlab/data     /var/opt/gitlab         For storing application data
# /srv/gitlab/logs     /var/log/gitlab         For storing logs
# /srv/gitlab/config   /etc/gitlab             For storing the GitLab configuration files

  devops-scm:
    image: 'gitlab/gitlab-ce:latest'
    container_name: devops-scm
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraint:
          - node.role =
    restart: unless-stopped
    hostname: 'ns3061723.ip-193-70-44.eu:80'
    environment:
      external_url: 'ns3061723.ip-193-70-44.eu'
    ports:
      - '9081:80'
      - '444:443'
      - '2222:22'
    volumes:
      - '/srv/gitlab/config:/etc/gitlab'
      - '/srv/gitlab/logs:/var/log/gitlab'
      - '/srv/gitlab/data:/var/opt/gitlab'

# service 2 -- ci-cd (jenkins) called here devops-cd-cd

# this service requires the following pre tasks:
# 
# create  direstory data in the path of your choice (here we are creating it in /srv/jenkins/data/ )
#  
# then create lo.properties file with the following content
# 
# cat > /srv/jenkins/data/log.properties <<EOF
# handlers=java.util.logging.ConsoleHandler
# jenkins.level=FINEST
# java.util.logging.ConsoleHandler.level=FINEST
# EOF

  devops-cd-cd:
    image: 'jenkins:latest'
    container_name: devops-cd-cd
    deploy:
      mode: replicated
      replicas: 1
    restart: unless-stopped
    environment:
      JAVA_OPTS: '-Djava.util.logging.config.file=/var/jenkins_home/log.properties'
    ports:
      - '9080:8080'
      - '50000:50000'
    volumes:
      - '/srv/jenkins/data:/var/jenkins_home'

# service 3 -- docker-registry (registry image from docker hub)

  # docker-registry:
  #   image: 'registry:latest'
  #   container_name: docker-registry
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #   restart: unless-stopped
  #   ports:
  #     - '5000:5000'



# docker run --detach \
# --hostname ns3061723.ip-193-70-44.eu:80 \
# --publish 9081:80 --publish 2222:22  --publish 444:443\
# --name devops-scm \
# --restart always \
# --volume /srv/gitlab/config:/etc/gitlab \
# --volume /srv/gitlab/logs:/var/log/gitlab \
# --volume /srv/gitlab/data:/var/opt/gitlab \
# gitlab/gitlab-ce:latest



# docker service create --name gitlab \
# -p 80443:443 -p 8081:80 --publish 8022:22 \
# --network my-network \
# --replicas 1 \
# --hostname 10.69.8.10 \
# --mount type=bind,src=/var/gitlab/config,dst=/etc/gitlab \
# --mount type=bind,src=/var/gitlab/logs,dst=/var/log/gitlab \
# --mount type=bind,src=/var/gitlab/data,dst=/var/opt/gitlab \
# --constraint "node.labels.gitlab==true" \
# gitlab/gitlab-ce:latest